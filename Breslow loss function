from tensorflow.keras import losses

def lossB(y_true, y_pred): #Breslow log-likelihood
    time = y_true[:,0]
    event = y_true[:,1]
    y_pred = K.flatten(y_pred)
    y_pred = tf.cast(y_pred, dtype=tf.float32)
    n = tf.shape(time)[0]
    sort_index = tf.nn.top_k(time, k=n, sorted=True).indices

    time = K.gather(reference=time, indices=sort_index)
    event = K.gather(reference=event, indices=sort_index)
    y_pred = K.gather(reference=y_pred, indices=sort_index)
    time = K.reverse(time, axes = 0)
    event = K.reverse(event, axes = 0)
    y_pred = K.reverse(y_pred, axes = 0)

    time_event = time*event
    unique_time = tf.unique(tf.boolean_mask(tensor = time_event, mask = tf.greater(time_event, 0))).y
    m = tf.shape(unique_time)[0]
    tie_count = tf.unique_with_counts(tf.boolean_mask(time_event, tf.greater(time_event, 0))).count
    ind_matrix = K.expand_dims(time, 0) - K.expand_dims(time, 1)
    ind_matrix = K.equal(x = ind_matrix, y = K.zeros_like(ind_matrix))
    ind_matrix = K.cast(x = ind_matrix, dtype = tf.float32)
    time_count = K.cumsum(tf.unique_with_counts(time).count)
    time_count = K.cast(time_count - K.ones_like(time_count), dtype = tf.int32)
    ind_matrix = K.gather(ind_matrix, time_count)

    tie_haz = K.exp(y_pred) * event # exp(y)*delta
    tie_haz = K.dot(ind_matrix, K.expand_dims(tie_haz)) # k_dot : Multiplies(dot product) 2 Tensors
    event_index = tf.math.not_equal(tie_haz,0) # tf$math$not_equal(X,x) : I(X=x)
    tie_haz = tf.boolean_mask(tie_haz, event_index)
    tie_risk = y_pred * event # y*delta
    tie_risk = K.dot(ind_matrix, K.expand_dims(tie_risk))
    tie_risk = tf.boolean_mask(tie_risk, event_index)

    cum_haz = K.dot(ind_matrix, K.expand_dims(K.exp(y_pred))) # exp(y)
    cum_haz = K.reverse(tf.cumsum(K.reverse(cum_haz, axes = 0)), axes = 0)
    cum_haz = tf.boolean_mask(cum_haz, event_index)
    tie_count1=tf.cast(tie_count, dtype=tf.float32)
    log_lik=tf.math.reduce_sum(tie_risk)-tf.math.reduce_sum(tie_count1*tf.math.log(cum_haz)) #OK

    return tf.negative(log_lik)
